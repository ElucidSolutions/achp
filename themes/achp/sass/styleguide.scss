/*
  This stylesheet defines the default styles
  for various elements as defined by the current
  version of the ACHP styleguide.
*/

// Standardized margin sizes.
$margin-xsmall: 5px;
$margin-small: 10px;
$margin-med: 20px;
$margin-large: 40px;
$margin-xlarge: 60px;

// The default body text size.
$default-font-size: rem(18px);

// The default small text size.
$small-font-size: rem(16px);

// The default body text line height.
$default-line-height: 1.7;

// The default header text line height.
$header-line-height: 1.4;

// The default body font.
$default-font-family: "minion-pro", Times, serif;

// The default header font.
$header-font-family: "p22-underground", sans-serif;

// The border settings used to simulate horizontal rules and other separators.
$separator: 1px solid $background-color-grey2;

/*
  Accepts no arguments and removes the padding
  and margins from the element this mixin is
  applied to.
*/
@mixin strip-margins {
  margin: 0;
  padding: 0;
}

/*
  Accepts two arguments:

  * property, a CSS property
  * and mobile-value, another CSS value

  sets property to mobile-value and adds a media
  query that sets property to mobile-value for
  mobile screens.
*/
@mixin mobile($property, $mobile-value) {
  @media screen and (max-width: $mobile-breakpoint) {
    #{$property}: $mobile-value;
  }
}

/*
  Accepts two arguments:

  * property, a CSS property
  * and tablet-value, another CSS value

  sets property to tablet-value and adds a media
  query that sets property to tablet-value for
  tablet screens.
*/
@mixin tablet($property, $tablet-value) {
  @media screen and (max-width: $hero-breakpoint) {
    #{$property}: $tablet-value;
  }
}

/*
  Accepts four arguments:

  * property, a CSS property
  * widescreen-value, a CSS value
  * tablet-value, a CSS value
  * and mobile-value, an optional CSS value

  sets property to widescreen-value and
  adds media queries that sets property to
  tablet-value and mobile-value for tablet and
  mobile screens.
*/
@mixin responsive($property, $widescreen-value, $tablet-value, $mobile-value: null) {
  #{$property}: $widescreen-value;
  @include tablet($property, $tablet-value);
  @if $mobile-value {
    @include mobile($property, $mobile-value);
  }
}

/*
  Accepts five optional arguments:

  * $color: a Color value
  * $font-family: a font-family string
  * $font-weight: a font-weight
  * $line-height: a line-height
  * and $center: a boolean value

  and renders the element it is applied to
  as a header element overriding the default
  properties with the given values.

  Note: if $center is false, this mixin will
  not add responsive behavior that centers text
  within the element on small devices.
*/
@mixin header-text(
  $color: null,
  $font-family: null,
  $font-weight: null,
  $line-height: null,
  $center: null
) {
  color: if($color, $color, $color-darkblue2);
  font-family: if($font-family, $font-family, $header-font-family);
  font-weight: if($font-weight, $font-weight, 400);
  line-height: if($line-height, $line-height, $header-line-height);
  @if $center == null or $center { @include responsive(text-align, left, center); }
}

/*
  Accepts three optional arguments:

  * $font-family, a font-family string
  * $font-size, a CSS dimension
  * $line-height, a CSS dimension

  and renders the element it is applied to as
  a body text element overriding the default
  properties values with the given values.
*/
@mixin body-text(
  $font-family: null,
  $font-size: null,
  $line-height: null
) {
  font-family: if($font-family, $font-family, $default-font-family);
  font-size: if($font-size, $font-size, $default-font-size);
  line-height: if($line-height, $line-height, $default-line-height);
}

// Represents properties shared by all text blocks.
@mixin text-block {
  @include strip-margins;
}

/*
  Accepts five optional arguments:

  * $color: a Color value
  * $font-family: a font-family string
  * $font-weight: a font-weight
  * $line-height: a line-height
  * and $center: a boolean value

  and renders the element it is applied to as
  a header block element.
*/
@mixin header-text-block(
  $color: null,
  $font-family: null,
  $font-weight: null,
  $line-height: null,
  $center: null
) {
  @include text-block;
  @include header-text($color, $font-family, $font-weight, $line-height, $center);
}

/*
  Accepts three optional arguments:

  * $font-family, a font-family string
  * $font-size, a CSS dimension
  * $line-height, a CSS dimension

  and renders the element it is applied to as
  a body text block element.
*/
@mixin body-text-block (
  $font-family: null,
  $font-size: null,
  $line-height: null
) {
  @include text-block;
  @include body-text($font-family, $font-size, $line-height);
  margin-bottom: $margin-med;
}

/*
  Accepts two arguments:

  * front-size, a CSS length measure
  * margin-bottom, a CSS length measure

  and sets both the font size and bottom margin
  of the element that this mixin is applied to.

  Note: this mixin sets the bottom margin
  because, in general, changing the font size
  changes the size of the font's dropdown area -
  affecting the bottom margin.
*/
@mixin font-size($font-size, $margin-bottom) {
  font-size: $font-size;
  margin-bottom: $margin-bottom;
}

/*
  Accepts two arguments:

  * font-size, a CSS length measure
  * and margin-bottom, a CSS length measure

  and sets the mobile font size and bottom margin
  of the element that this mixin is applied to.

  Note: this mixin sets the bottom margin
  because, in general, changing the font size
  changes the size of the font's dropdown area.
*/
@mixin mobile-font-size($font-size, $margin-bottom) {
  @include mobile(font-size, $font-size);
  @include mobile(margin-bottom, $margin-bottom);
}

/*
  Accepts four length measures as
  arguments: $widescreen-font-size,
  $widescreen-margin-bottom, $mobile-font-size,
  and $mobile-margin-bottom, and sets the
  widescreen and mobile font sizes while
  adjusting the bottom margins.
*/
@mixin widescreen-mobile-font-size($widescreen-font-size, $widescreen-margin-bottom, $mobile-font-size, $mobile-margin-bottom) {
  @include font-size($widescreen-font-size, $widescreen-margin-bottom);
  @include mobile-font-size($mobile-font-size, $mobile-margin-bottom);
}

/*
  Accepts five optional arguments:

  * $color, a CSS color
  * $font-family, a font-family string
  * $font-size, a CSS dimension
  * $highlight-color, a CSS color
  * $line-height, a CSS dimension

  and renders the element that this mixin is
  applied to as an anchor element.
*/
@mixin a (
  $color: null,
  $font-family: null,
  $font-size: null,
  $highlight-color: null,
  $line-height: null
) {
  @include body-text(
    if($font-family, $font-family, $header-font-family),
    $font-size,
    $line-height
  );
  @include hover-transition-content(if($highlight-color, $highlight-color, $color-lightblue-primary));
  color: if($color, $color, $color-blue-primary);
}

/*
  Accepts seven optional arguments:

  * $background-color, a CSS color
  * $color, a CSS color
  * $font-family, a font-family string
  * $font-size, a CSS dimension
  * $font-weight, a font-weight
  * $highlight-color, a CSS color
  * $uppercase, a boolea

  Renders the element that this mixin is applied
  to as a button element.

  Note: if $uppercase is false this mixin does
  not text-transform uppercase the button label.
*/
@mixin achp-button(
  $background-color: null,
  $color: null,
  $font-family: null,
  $font-size: null,
  $font-weight: null,
  $highlight-color: null,
  $uppercase: null
) {
  @include hover-transition-background(if($background-color, $background-color, $color-lightblue-primary));
  @include mobile(line-height, 1.2rem);
  background-color: if($background-color, $background-color, $color-blue-primary);
  border: none;
  border-radius: 2px;
  color: if($color, $color, white);
  cursor: pointer;
  display: inline-block;
  font-size: if($font-size, $font-size, 16px);
  font-family: if($font-family, $font-family, $sans-text);
  font-weight: if($font-weight, $font-weight, 600);
  padding: 12px 38px 8px;
  @if $uppercase == null or $uppercase { text-transform: uppercase; }

  a {
    color: if($color, $color, white);
  }
}

/*
  Renders the element that this mixin is applied
  to as a blockquote element.
*/
@mixin blockquote {
  @include body-text-block;
  font-size: rem(24px);
  font-style: italic;
  margin-left: $margin-med;
  @include mobile-font-size($default-font-size, $margin-med);
}

/*
  Accepts five optional arguments:

  * $color: a Color value
  * $font-family: a font-family string
  * $font-weight: a font-weight
  * $line-height: a line-height
  * and $center: a boolean value

  Renders the element that this mixin is applied
  to as an H1 element.
*/
@mixin h1(
  $color: null,
  $font-family: null,
  $font-weight: null,
  $line-height: null,
  $center: null
) {
  @include header-text-block($color, $font-family, $font-weight, $line-height, $center);
  @include widescreen-mobile-font-size(rem(36px), 0, rem(26px), 0);
}

/*
  Accepts five optional arguments:

  * $color: a Color value
  * $font-family: a font-family string
  * $font-weight: a font-weight
  * $line-height: a line-height
  * and $center: a boolean value

  Renders the element that this mixin is applied
  to as an H2 element.
*/
@mixin h2(
  $color: null,
  $font-family: null,
  $font-weight: null,
  $line-height: null,
  $center: null
) {
  @include header-text-block($color, $font-family, $font-weight, $line-height, $center);
  @include widescreen-mobile-font-size(rem(32px), $margin-med, rem(22px), $margin-med);
}

/*
  Accepts five optional arguments:

  * $color: a Color value
  * $font-family: a font-family string
  * $font-weight: a font-weight
  * $line-height: a line-height
  * and $center: a boolean value

  Renders the element that this mixin is applied
  to as an H3 element.
*/
@mixin h3(
  $color: null,
  $font-family: null,
  $font-weight: null,
  $line-height: null,
  $center: null
) {
  @include header-text-block($color, $font-family, $font-weight, $line-height, $center);
  @include widescreen-mobile-font-size(rem(22px), $margin-xsmall, rem(20px), 0);
}

/*
  Accepts five optional arguments:

  * $color: a Color value
  * $font-family: a font-family string
  * $font-weight: a font-weight
  * $line-height: a line-height
  * and $center: a boolean value

  Renders the element that this mixin is applied
  to as an H4 element.
*/
@mixin h4(
  $color: null,
  $font-family: null,
  $font-weight: null,
  $line-height: null,
  $center: null
) {
  @include header-text-block($color, $font-family, $font-weight, $line-height, $center);
  @include widescreen-mobile-font-size(rem(22px), 0, $default-font-size, 0);
}

/*
  Accepts no arguments and styles the element
  that this mixin is applied to as a table
  element.
*/
@mixin table {
  border-collapse: collapse;
}

/*
  Accepts one argument: $margin-bottom; and 
  styles the element that this mixin is
  applied to as a form label.

  Note: this mixin should be applied to label
  elements.
*/
@mixin achp-label($margin-bottom: null) {
  @include header-text($color: $color-grey, $font-weight: 600, $center: false);
  display: block;
  font-size: rem(16px);
  margin-bottom: if($margin-bottom, $margin-bottom, $margin-small);

  &.form-required:after {
    content: "*";
  }
}

/*
  Accepts one argument: $placeholder-color,
  a CSS color value; and styles the element
  that this mixin is applied to as a textfield
  form element.

  Note: this mixin should be applied to input
  elements.
*/
@mixin achp-textfield($placeholder-color: null) {
  border: 1px solid $color-lightgrey-2;
  border-radius: 2px;
  height: 40px;
  margin-bottom: $margin-med;
  max-width: 100%;
  padding: 5px;

  @include placeholder {
    font-family: $sans-text;
    font-size: rem(16px);
    color: if($placeholder-color, $placeholder-color, #BBBBBB);
  }
}

/*
  Renders the element children of the element
  that this mixin is applied to according to
  the rules specified in the current styleguide.
*/
@mixin styleguide {
  a {
    @include a;
  }
  blockquote {
    @include blockquote;
  }
  h1 {
    @include h1;
  }
  h2 {
    @include h2;
  }
  h3 {
    @include h3;
  }
  h4 {
    @include h4;
  }
  p {
    @include body-text-block;
  }
  ul {
    @include body-text-block;
  }
  table {
    @include table;
  }
}
