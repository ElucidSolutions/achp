/*
  This stylesheet defines the default styles
  for various elements as defined by the current
  version of the ACHP styleguide.
*/

// Standardized margin sizes.
$margin-xsmall: 5px;
$margin-small: 10px;
$margin-med: 20px;
$margin-large: 40px;
$margin-xlarge: 60px;

// The default body text size.
$default-font-size: rem(18px);

// The default small text size.
$small-font-size: rem(16px);

// The default body text line height.
$default-line-height: 1.7;

// The default body font.
$default-font-family: "minion-pro", serif;

// The default header font.
$header-font-family: "p22-underground", sans-serif;

// The border settings used to simulate horizontal rules and other separators.
$separator: 1px solid $background-color-grey2;

/*
  Accepts no arguments and removes the padding
  and margins from the element this mixin is
  applied to.
*/
@mixin strip-margins {
  margin: 0;
  padding: 0;
}

/*
  Accepts two arguments:

  * property, a CSS property
  * and mobile-value, another CSS value

  sets property to mobile-value and adds a media
  query that sets property to mobile-value for
  mobile screens.
*/
@mixin mobile($property, $mobile-value) {
  @media screen and (max-width: $mobile-breakpoint) {
    #{$property}: $mobile-value;
  }
}

/*
  Accepts two arguments:

  * property, a CSS property
  * and tablet-value, another CSS value

  sets property to tablet-value and adds a media
  query that sets property to tablet-value for
  tablet screens.
*/
@mixin tablet($property, $tablet-value) {
  @media screen and (max-width: $hero-breakpoint) {
    #{$property}: $tablet-value;
  }
}

/*
  Accepts four arguments:

  * property, a CSS property
  * widescreen-value, a CSS value
  * tablet-value, a CSS value
  * and mobile-value, an optional CSS value

  sets property to widescreen-value and
  adds media queries that sets property to
  tablet-value and mobile-value for tablet and
  mobile screens.
*/
@mixin responsive($property, $widescreen-value, $tablet-value, $mobile-value: null) {
  #{$property}: $widescreen-value;
  @include tablet($property, $tablet-value);
  @if $mobile-value {
    @include mobile($property, $mobile-value);
  }
}

// Represents the set of shared header styles.
@mixin header-text {
  color: $color-darkblue2;
  font-family: $header-font-family;
  font-weight: 400;
  @include responsive(text-align, left, center);
}

// Represents the set of shared body text styles.
@mixin body-text {
  font-family: $default-font-family;
  font-size: $default-font-size;
  line-height: $default-line-height;
}

// Represents properties shared by all text blocks.
@mixin text-block {
  @include strip-margins;
}

// Represetns the set of shared header block styles.
@mixin header-text-block {
  @include text-block;
  @include header-text;
}

// Represents the set of shared body text block styles.
@mixin body-text-block {
  @include text-block;
  @include body-text;
  margin-bottom: $margin-med;
}

/*
  Accepts two arguments:

  * front-size, a CSS length measure
  * margin-bottom, a CSS length measure

  and sets both the font size and bottom margin
  of the element that this mixin is applied to.

  Note: this mixin sets the bottom margin
  because, in general, changing the font size
  changes the size of the font's dropdown area -
  affecting the bottom margin.
*/
@mixin font-size($font-size, $margin-bottom) {
  font-size: $font-size;
  margin-bottom: $margin-bottom;
}

/*
  Accepts two arguments:

  * font-size, a CSS length measure
  * and margin-bottom, a CSS length measure

  and sets the mobile font size and bottom margin
  of the element that this mixin is applied to.

  Note: this mixin sets the bottom margin
  because, in general, changing the font size
  changes the size of the font's dropdown area.
*/
@mixin mobile-font-size($font-size, $margin-bottom) {
  @include mobile(font-size, $font-size);
  @include mobile(margin-bottom, $margin-bottom);
}

/*
  Accepts four length measures as
  arguments: $widescreen-font-size,
  $widescreen-margin-bottom, $mobile-font-size,
  and $mobile-margin-bottom, and sets the
  widescreen and mobile font sizes while
  adjusting the bottom margins.
*/
@mixin widescreen-mobile-font-size($widescreen-font-size, $widescreen-margin-bottom, $mobile-font-size, $mobile-margin-bottom) {
  @include font-size($widescreen-font-size, $widescreen-margin-bottom);
  @include mobile-font-size($mobile-font-size, $mobile-margin-bottom);
}

/*
  Renders the element that this mixin is applied
  to as an H1 element.
*/
@mixin h1 {
  @include header-text-block;
  @include widescreen-mobile-font-size(rem(36px), 0, rem(26px), 0);
}

/*
  Renders the element that this mixin is applied
  to as an H2 element.
*/
@mixin h2 {
  @include header-text-block;
  @include widescreen-mobile-font-size(rem(32px), $margin-med, rem(22px), $margin-xsmall);
}

/*
  Renders the element that this mixin is applied
  to as an H3 element.
*/
@mixin h3 {
  @include header-text-block;
  @include widescreen-mobile-font-size(rem(22px), $margin-xsmall, rem(20px), 0);
}

/*
  Renders the element that this mixin is applied
  to as an H4 element.
*/
@mixin h4 {
  @include header-text-block;
  @include widescreen-mobile-font-size(rem(22px), 0, $default-font-size, 0);
}

@include body-text;

a {
  @include body-text;
  @include hover-transition-content($color-lightblue-primary);
  color: $color-blue-primary;
  font-family: $header-font-family;
}
blockquote {
  @include body-text-block;
  font-size: rem(24px);
  font-style: italic;
  @include mobile-font-size($default-font-size, $margin-med);
}
h1 {
  @include h1;
}
h2 {
  @include h2;
}
h3 {
  @include h3;
}
h4 {
  @include h4;
}
p {
  @include body-text-block;
}
ul {
  @include body-text-block;
}
