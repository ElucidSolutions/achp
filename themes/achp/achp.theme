<?php

use Drupal\file\Entity\File;
use Drupal\Core\Url;

// Implements hook_preprocess ().
function achp_preprocess_views_view__community_spotlight (&$variables) {
  foreach ($variables['rows'] as $id => &$row) {
    // Randomly select one row for display.
    $row ['#rows'] = array ($row ['#rows'][array_rand ($row ['#rows'])]);
  }
}

/**
 * Implements hook_preprocess_page ().
 */
function achp_preprocess_page (&$variables) {
  if (isset ($variables ['node'])) {
    $variables ['node_type'] = $variables ['node']->getType ();
  }
}

/**
 * Implements hook_pre_render_alter ().
 *
 * This function adds a class to the last view
 * item displayed in a view row that uses the
 * Flickity format.
 *
 * The Flickity module defines
 * this hook function. See
 * modules/contrib/flickity/theme/flickity.theme.inc.
 *
 * Note: This hook is used by the image gallery feature.
 */
function achp_pre_render_alter (&$build) {
  $build ['#output'][count ($build ['#output']) - 1]['#attributes']['class'][] = 'last-item';
}

/**
 * Implements hook_form_FORM_ID_alter ().
 *
 * This function works around an apparent bug
 * in the Views module in which the date filter in
 * the News view will not reposition itself below
 * the topic filter when its weight is set using
 * the Views UI. This function manually assigns
 * a high weight to the date filter to position
 * the filter below the topic filter.
 */
function achp_form_views_exposed_form_alter (&$form, &$form_state, $form_id) {
  $form ['field_news_date_value']['#weight'] = 20;
}

/**
 * Implements hook_preprocess_hook ()
 *
 * Exposes node fields in Entity Reference
 * field templates.
 */
function achp_preprocess_field (&$variables, $hook) {
  if ($variables ['field_type'] === 'entity_reference') {
    foreach ($variables ['element']['#items'] as $item_key => $item) {
      $nid = $item->getValue () ['target_id'];
      $node = entity_load ('node', $item->getValue () ['target_id']);
      if (!$node) { continue; }

      $title_value = $node->title->first ();
      if ($title_value) { 
        $variables ['items'][$item_key]['title'] = $title_value->getString (); 
      }

      $url = null;

      if ($node->field_attachment) {
        $value = $node->field_attachment->first ()->getValue ();
        $file = File::load ($value ['target_id']);
        $url = $file->url (); 
      } else {
        global $base_url;
        $url = $base_url . \Drupal::service ('path.alias_manager')->getAliasByPath ('/node/' . $nid);
      }

      $variables ['items'][$item_key]['url'] = $url;

      foreach ($node->body->getValue () as $value_key => $value) {
        $variables ['items'][$item_key]['body'] = $value ['summary'] ? 
          $value ['summary'] :
          $value ['value'];
      }
    }
  }
}
